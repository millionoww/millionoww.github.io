const toggleBtn = document.getElementById('theme-toggle');
toggleBtn.addEventListener('click', () => {
  document.body.classList.toggle('dark-theme');
  toggleBtn.textContent = document.body.classList.contains('dark-theme') ? '‚òÄÔ∏è' : 'üåô';
});

// –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showPopup(message) {
  const popup = document.createElement('div');
  popup.textContent = message;
  popup.style.position = 'fixed';
  popup.style.bottom = '20px';
  popup.style.right = '20px';
  popup.style.background = '#00ffff';
  popup.style.color = '#000';
  popup.style.padding = '10px 20px';
  popup.style.borderRadius = '8px';
  popup.style.zIndex = '1000';
  popup.style.boxShadow = '0 4px 12px rgba(0,255,255,0.3)';
  popup.style.opacity = '0';
  popup.style.transition = 'opacity 0.5s ease';
  document.body.appendChild(popup);
  requestAnimationFrame(() => popup.style.opacity = '1');
  setTimeout(() => {
    popup.style.opacity = '0';
    setTimeout(() => popup.remove(), 500);
  }, 3000);
}

// –ú–∞–≥–∞–∑–∏–Ω
const cart = [];
const products = [
  { id: 1, name: '–§—É—Ç–±–æ–ª–∫–∞ "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω"', price: 4500 },
  { id: 2, name: '–ë–ª–æ–∫–Ω–æ—Ç –¥–ª—è –∏–¥–µ–π', price: 2500 },
  { id: 3, name: '–ö—Ä—É–∂–∫–∞ "–ë–∞—Ç—ã—Ä"', price: 3000 }
];

document.querySelectorAll('.add-to-cart').forEach(button => {
  button.addEventListener('click', () => {
    const productId = parseInt(button.parentElement.dataset.id);
    const product = products.find(p => p.id === productId);
    cart.push(product);
    updateCart();
    showPopup(`–î–æ–±–∞–≤–ª–µ–Ω–æ: ${product.name}`);
  });
});

function updateCart() {
  const cartItems = document.getElementById('cart-items');
  const total = document.getElementById('total');
  if (!cartItems || !total) return;
  cartItems.innerHTML = '';
  let sum = 0;
  cart.forEach(item => {
    const li = document.createElement('li');
    li.textContent = `${item.name} ‚Äî ${item.price} ‚Ç∏`;
    cartItems.appendChild(li);
    sum += item.price;
  });
  total.textContent = `–ò—Ç–æ–≥–æ: ${sum} ‚Ç∏`;
}

// –§–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞
const checkoutForm = document.getElementById('checkout');
if (checkoutForm) {
  checkoutForm.addEventListener('submit', function(e) {
    e.preventDefault();
    const name = document.getElementById('name').value.trim();
    const phone = document.getElementById('phone').value.trim();
    if (cart.length === 0) {
      showPopup('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!');
      return;
    }
    document.getElementById('order-status').textContent = `–°–ø–∞—Å–∏–±–æ, ${name}! –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç. –ú—ã —Å–≤—è–∂–µ–º—Å—è –ø–æ –Ω–æ–º–µ—Ä—É ${phone}.`;
    cart.length = 0;
    updateCart();
  });
}

// –ü–æ–∏—Å–∫ –ø–æ –±–ª–æ–≥—É
const searchInput = document.getElementById('search');
if (searchInput) {
  searchInput.addEventListener('input', function() {
    const query = this.value.toLowerCase();
    document.querySelectorAll('article').forEach(article => {
      const text = article.textContent.toLowerCase();
      article.style.display = text.includes(query) ? 'block' : 'none';
    });
  });
}

// –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω ‚Äî —á–∞—Å—Ç–∏—Ü—ã
const canvas = document.getElementById('particles');
if (canvas) {
  const ctx = canvas.getContext('2d');
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
  canvas.style.position = 'fixed';
  canvas.style.top = 0;
  canvas.style.left = 0;
  canvas.style.zIndex = '-1';

  let particles = [];
  for (let i = 0; i < 80; i++) {
    particles.push({
      x: Math.random() * canvas.width,
      y: Math.random() * canvas.height,
      r: Math.random() * 2 + 1,
      dy: (Math.random() - 0.5) * 0.3
    });
  }

  function draw() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    for (let p of particles) {
      ctx.beginPath();
      ctx.arc(p.x, p.y, p.r, 0, Math.PI * 2);
      ctx.fillStyle = 'rgba(255,255,255,0.5)';
      ctx.fill();
      p.x += p.dx;
      p.y += p.dy;

      // –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç –∫—Ä–∞—ë–≤
      if (p.x < 0 || p.x > canvas.width) p.dx *= -1;
      if (p.y < 0 || p.y > canvas.height) p.dy *= -1;
    }
    requestAnimationFrame(draw);
  }

  draw();
}

function sendToTelegram(name, phone, cartItems) {
  const token = '8173963061:AAHg9gCcrFnQWa1OiH6mZHLn927l6ZEGys4';
  const chatId = '-1002557717506';
  const message = `üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑:\nüë§ –ò–º—è: ${name}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\nüì¶ –¢–æ–≤–∞—Ä—ã:\n${cartItems.map(i => `- ${i.name} (${i.price} ‚Ç∏)`).join('\n')}`;

  const buttons = {
    inline_keyboard: [
      [
        { text: 'üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É', url: `tel:${phone}` },
        { text: 'üåê –û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç', url: 'https://millionoww.github.io' }
      ],
      [
        { text: '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑', callback_data: 'confirm_order' }
      ]
    ]
  };
  
  fetch(`https://api.telegram.org/bot${token}/sendMessage`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ chat_id: chatId, text: message })
  });
}
